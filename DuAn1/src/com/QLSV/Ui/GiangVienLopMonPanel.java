/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.QLSV.Ui;

import com.QLSV.DAO.GiangVienDAO;
import com.QLSV.DAO.LichGiangDayDAO;
import com.QLSV.DAO.LopDAO;
import com.QLSV.DAO.MonCuaGiangVienDAO;
import com.QLSV.DAO.MonHocCuaNganhDAO;
import com.QLSV.DAO.MonHocDAO;
import com.QLSV.Model.GiangVien;
import com.QLSV.Model.Lop;
import com.QLSV.Model.MonCuaGiangVien;
import com.QLSV.Model.MonHoc;
import com.QLSV.Model.MonHocCuaNganh;
import com.QLSV.Model.LichGiangDay;
import com.QLSV.Utility.MsgBox;
import com.QLSV.Utility.Other;
import java.awt.Color;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author tontr
 */
public class GiangVienLopMonPanel extends javax.swing.JPanel {
    LopDAO lopdao =new LopDAO();
    MonHocDAO mhdao =new MonHocDAO();
    GiangVienDAO gvdao =new GiangVienDAO();
    LichGiangDayDAO dao=new LichGiangDayDAO();
    MonHocCuaNganhDAO mhcndao= new MonHocCuaNganhDAO();
    MonCuaGiangVienDAO mcgvdao=new MonCuaGiangVienDAO();
    /**
     * Creates new form GiangVienLopMonPanel
     */
    public GiangVienLopMonPanel() {
        initComponents();
        loadTable();
        loadCboLop();
        loadCboKy();
        loadCboMon();
        loadCboGiangVien();
        Other.setTable(tblLich);
    }
    public void loadCboLop(){
        cboLop.removeAllItems();
        List<Lop> list =lopdao.selectAll();
        for (Lop lop : list) {
            cboLop.addItem(lop.getMaLop());
        }
    }
    public void loadCboKy(){
        try {
            cboHocKy.removeAllItems();
            List<MonHocCuaNganh> list =mhcndao.cboKy(cboLop.getSelectedItem().toString());
            for (MonHocCuaNganh lop : list) {
                cboHocKy.addItem(String.valueOf(lop.getMaky()));
            }
        } catch (Exception e) {
        }
        
    }
    public void loadCboMon(){
        try {
            cboMonHoc.removeAllItems();
            List<MonHoc> list =mhdao.cboMon(Integer.parseInt(cboHocKy.getSelectedItem().toString()),cboLop.getSelectedItem().toString());
            for (MonHoc lop : list) {
                cboMonHoc.addItem(lop.getMaMon()+" - "+lop.getTenMon());
            }
        } catch (Exception e) {
        }
    }
    public void loadCboGiangVien(){
        try {
            cboMaGiangVien.removeAllItems();
            String monhoc =cboMonHoc.getSelectedItem().toString();
            String mamon =monhoc.substring(0,monhoc.indexOf("-"));
            List<GiangVien> list =gvdao.cboGiangVien(cboMonHoc.getSelectedItem().toString().substring(0,cboMonHoc.getSelectedItem().toString().indexOf(" ")));
            for (GiangVien lop : list) {
                cboMaGiangVien.addItem(lop.getMaGiangVien()+" - "+lop.getTenGiangVien());
            }
        } catch (Exception e) {
        }
    }
    public void loadTable(){
        DefaultTableModel model =(DefaultTableModel)tblLich.getModel();
        model.setRowCount(0);
        List<LichGiangDay> list =dao.selectAll();
        for(LichGiangDay l:list){
            model.addRow(new Object[]{l.getMaLop(),l.getMaGiangVien(),l.getMaMon(),l.getIdLichGiangDay()});
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLich = new javax.swing.JTable();
        cboLop = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JLabel();
        btnDelete = new javax.swing.JLabel();
        cboMonHoc = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboMaGiangVien = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboHocKy = new javax.swing.JComboBox<>();
        btnXuatLich = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1180, 780));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(52, 31, 151));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sắp xếp lịch giảng dạy");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Mã lớp :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Học kỳ :");

        tblLich.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblLich.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã lớp", "Mã giảng viên", "Môn học", "Thông báo số"
            }
        ));
        tblLich.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLichMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLich);

        cboLop.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboLop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLopActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/QLSV/Icon/nutTuGiacTB.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/QLSV/Icon/nutTuGiacTB.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/QLSV/Icon/nutTuGiacTB.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        cboMonHoc.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboMonHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonHocActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Môn học:");

        cboMaGiangVien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboMaGiangVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Mã GV :");

        cboHocKy.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cboHocKy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboHocKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHocKyActionPerformed(evt);
            }
        });

        btnXuatLich.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnXuatLich.setForeground(new java.awt.Color(255, 255, 255));
        btnXuatLich.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/QLSV/Icon/nutTuGiacTB.png"))); // NOI18N
        btnXuatLich.setText("Xuất lịch");
        btnXuatLich.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXuatLich.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXuatLichMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1181, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnXuatLich, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(cboMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(cboLop, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(36, 36, 36)
                                .addComponent(cboMaGiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 943, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(113, 113, 113))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(btnSave)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cboLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(cboHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addComponent(btnDelete))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(cboMaGiangVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXuatLich)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
    }// </editor-fold>//GEN-END:initComponents
     LichGiangDay getForm(){
        LichGiangDay l=new LichGiangDay();
        
        String giangVien =cboMaGiangVien.getSelectedItem().toString();
        int viTri =giangVien.indexOf(" ");
        l.setMaGiangVien(giangVien.substring(0,viTri)); 
        l.setMaLop(cboLop.getSelectedItem().toString());
        l.setMaMon(cboMonHoc.getSelectedItem().toString().substring(0,cboMonHoc.getSelectedItem().toString().indexOf(" "))); 
        
         System.out.println(l.getMaGiangVien());
         System.out.println(l.getMaLop());
         System.out.println(l.getMaMon());
        
        
        return l;
    }
     LichGiangDay getFormUpdate(){
        LichGiangDay l=new LichGiangDay();
        String giangVien =cboMaGiangVien.getSelectedItem().toString();
        int viTri =giangVien.indexOf(" ");
        l.setMaGiangVien(giangVien.substring(0,viTri)); 
        l.setMaLop(cboLop.getSelectedItem().toString());
        l.setMaMon(cboMonHoc.getSelectedItem().toString().substring(0,cboMonHoc.getSelectedItem().toString().indexOf(" "))); 
        l.setIdLichGiangDay(Integer.valueOf(tblLich.getValueAt(tblLich.getSelectedRow(), 3).toString()));
         System.out.println(l.getIdLichGiangDay());
        return l;
    }
     boolean checkRong(){
         if(cboMaGiangVien.getItemCount()==0){
            MsgBox.alert(this, "Lỗi");
            return false;
        }else{
            return true;
        }
     }
    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        if (checkRong()&&check(getForm())) {
            dao.insert(getForm());
            loadTable();
            MsgBox.alert(this, "Save thành công");
        }
     
    // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseClicked
    boolean check(LichGiangDay d){
        int row =tblLich.getRowCount();
        for (int i = 0; i < row; i++) {
            String maLop= tblLich.getValueAt(i, 0).toString();
            String maMon= tblLich.getValueAt(i, 2).toString();
            String maGV= tblLich.getValueAt(i, 1).toString();
            if(d.getMaGiangVien().equals(maGV) && d.getMaLop().equals(maLop) && d.getMaMon().equals(maMon)){
                MsgBox.alert(this, "Đã tồn tại");
                return false;
            }
        }
        return true;
    }
    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        
         if (checkRong()&&check(getForm())) {
            dao.update(getFormUpdate());
            loadTable();
            MsgBox.alert(this, "Update thành công");
        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void cboLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLopActionPerformed
        if(cboLop.getItemCount()==0){
            return;
        }// TODO add your handling code here:
        loadCboKy();
    }//GEN-LAST:event_cboLopActionPerformed

    private void cboHocKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHocKyActionPerformed
        if(cboHocKy.getItemCount()==0){
            return;
        }// TODO add your handling code here:
        loadCboMon();    // TODO add your handling code here:
    }//GEN-LAST:event_cboHocKyActionPerformed

    private void cboMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonHocActionPerformed
        if(cboMonHoc.getItemCount()==0){
            return;
        }// TODO add your handling code here:
        loadCboGiangVien();         // TODO add your handling code here:
    }//GEN-LAST:event_cboMonHocActionPerformed

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        tblLich.getSelectedRows(); 
        for (int i = 0; i < tblLich.getSelectedRows().length; i++) {
            dao.delete((Integer) tblLich.getValueAt(tblLich.getSelectedRows()[i], 3));
        }
        MsgBox.alert(this, "Delete thành công");
        loadTable();
// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void tblLichMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLichMouseClicked
        int rowS=tblLich.getSelectedRow();
        
        cboLop.setSelectedItem(tblLich.getValueAt(rowS, 0));
        
        
        List<MonHocCuaNganh> list=mhcndao.cboKy(tblLich.getValueAt(rowS, 2).toString(), tblLich.getValueAt(rowS, 0).toString());
        cboHocKy.setSelectedItem(String.valueOf(list.get(0).getMaky()));
         
        int mon =cboMonHoc.getItemCount();
        String monHoc =tblLich.getValueAt(rowS, 2).toString();
        for (int i = 0; i < mon; i++) {
            if(cboMonHoc.getItemAt(i).contains(monHoc)){
                cboMonHoc.setSelectedIndex(i);
                break;
            }
        }
        
        int gv =cboMaGiangVien.getItemCount();
        String giangVien =tblLich.getValueAt(rowS, 1).toString();
        for (int i = 0; i < gv; i++) {
            if(cboMaGiangVien.getItemAt(i).contains(giangVien)){
                cboMaGiangVien.setSelectedIndex(i);
                break;
            }
        }
        
    }//GEN-LAST:event_tblLichMouseClicked
    XSSFWorkbook workbook;
    JFileChooser fileChooser = new JFileChooser();
    private void btnXuatLichMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXuatLichMouseClicked
        fileChooser.setDialogTitle ("Save as");
        FileNameExtensionFilter f = new FileNameExtensionFilter("xls", "xlsx");
        FileOutputStream out = null;

        fileChooser.setFileFilter (f);
        int excel = fileChooser.showSaveDialog(null);
        if (excel == JFileChooser.APPROVE_OPTION) {
            try {
                workbook = new XSSFWorkbook();
                XSSFSheet spreadsheet1 = workbook.createSheet("Điểm sinh viên");
                XSSFRow rows1 = null;
                Cell cells1 = null;
                CellStyle cs = headerCellStyle();
                CellStyle csc = coCellStyle();
                rows1 = spreadsheet1.createRow((short) 1);
                rows1.setHeight((short) 500);
                cells1 = rows1.createCell(0, CellType.STRING);
                cells1.setCellValue("Lịch giảng dạy");
                rows1 = spreadsheet1.createRow((short) 2);
                rows1.setHeight((short) 500);
                cells1 = rows1.createCell(0, CellType.STRING);
                cells1.setCellValue("Mã lớp");
                cells1.setCellStyle(cs);
                cells1 = rows1.createCell(1, CellType.STRING);
                cells1.setCellValue("Mã giãng viên");
                cells1.setCellStyle(cs);
                cells1 = rows1.createCell(2, CellType.STRING);
                cells1.setCellValue("Môn học");
                cells1.setCellStyle(cs);
                cells1 = rows1.createCell(3, CellType.STRING);
                cells1.setCellValue("Thống báo số");
                cells1.setCellStyle(cs);
                
                int tongrow = tblLich.getRowCount();
                for (int i = 0; i < tongrow; i++) {
                    rows1 = spreadsheet1.createRow((short) 3 + i);
                    rows1.setHeight((short) 500);
                    cells1 = rows1.createCell(0,CellType.STRING);
                    cells1.setCellValue(tblLich.getValueAt(i, 0).toString());
                    cells1.setCellStyle(csc);
                    cells1 = rows1.createCell(1,CellType.STRING);
                    cells1.setCellValue(tblLich.getValueAt(i, 1).toString());
                    cells1.setCellStyle(csc);
                    cells1 = rows1.createCell(2,CellType.STRING);
                    cells1.setCellValue(tblLich.getValueAt(i, 2).toString());
                    cells1.setCellStyle(csc);
                    cells1 = rows1.createCell(3,CellType.STRING);
                    cells1.setCellValue(tblLich.getValueAt(i, 3).toString());
                    cells1.setCellStyle(csc);
                    
                }
                for (int i = 0; i < 7; i++) {
                    spreadsheet1.autoSizeColumn(i);
                }
                out = new FileOutputStream(fileChooser.getSelectedFile() + ".xlsx");
                workbook.write(out);
                out.close();
                JOptionPane.showMessageDialog(this, "Xuất file thành công");
            } catch (Exception e) {
                e.printStackTrace();
            }
//       
    }   
     
     
    }//GEN-LAST:event_btnXuatLichMouseClicked
    public void setColor(JLabel p) {
        p.setForeground(new Color(255, 250, 101));
    }

    public void resetColor(JLabel p1) {
        p1.setForeground(new Color(255, 255, 255));
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnDelete;
    private javax.swing.JLabel btnSave;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.JLabel btnXuatLich;
    private javax.swing.JComboBox<String> cboHocKy;
    private javax.swing.JComboBox<String> cboLop;
    private javax.swing.JComboBox<String> cboMaGiangVien;
    private javax.swing.JComboBox<String> cboMonHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLich;
    // End of variables declaration//GEN-END:variables
    private CellStyle headerCellStyle() {
        CellStyle cellStyle = workbook.createCellStyle();
        cellStyle.setAlignment(org.apache.poi.ss.usermodel.HorizontalAlignment.CENTER);
        cellStyle.setVerticalAlignment(org.apache.poi.ss.usermodel.VerticalAlignment.CENTER);
        cellStyle.setBorderBottom(BorderStyle.THICK);
        cellStyle.setBorderLeft(BorderStyle.THICK);
        cellStyle.setBorderRight(BorderStyle.THICK);
        cellStyle.setBorderTop(BorderStyle.THICK);

        org.apache.poi.ss.usermodel.Font font = workbook.createFont();
        font.setBold(true);
        font.setFontName("Times New Roman");
        font.setFontHeight((short) 350);
        cellStyle.setFont(font);
        return cellStyle;
    }
     private CellStyle coCellStyle() {
        CellStyle cellStyle = workbook.createCellStyle();
        cellStyle.setAlignment(org.apache.poi.ss.usermodel.HorizontalAlignment.CENTER);
        cellStyle.setVerticalAlignment(org.apache.poi.ss.usermodel.VerticalAlignment.CENTER);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        cellStyle.setBorderLeft(BorderStyle.THICK);
        cellStyle.setBorderRight(BorderStyle.THICK);
        cellStyle.setBorderTop(BorderStyle.THIN);

        org.apache.poi.ss.usermodel.Font font = workbook.createFont();
        font.setFontName("Times New Roman");
        font.setFontHeight((short) 250);
        cellStyle.setFont(font);
        return cellStyle;
    }
}
